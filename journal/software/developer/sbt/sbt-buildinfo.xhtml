<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <link rel="stylesheet" type="text/css" href="/assets/stylesheets/main.css" media="all" />
  <meta charset="utf-8" />
  <link href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.1.2/styles/atom-one-light.min.css" rel="stylesheet" type="text/css" media="(prefers-color-scheme: light)" />
  <link href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.1.2/styles/atom-one-dark.min.css" rel="stylesheet" type="text/css" media="(prefers-color-scheme: dark)" />
  <script src="/assets/highlight/highlight.pack.js"></script>
  <script>hljs.initHighlightingOnLoad();</script>
  <!--  https://webkit.org/blog/7929/designing-websites-for-iphone-x/-->
  <meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover" />
  <!--  <link rel="mask-icon" href="/assets/images/mask-icon.svg" color="#888888">-->
  <!--  &lt;!&ndash;  https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html&ndash;&gt;-->
  <!--  <link rel="apple-touch-icon" href="/assets/images/apple-touch-icon.png">-->
  <!--  <meta name="apple-mobile-web-app-title" content="Journal">-->

  <!--  https://realfavicongenerator.net/favicon_result?file_id=p1efrjt5m7hi5281ag1mm616uv6#.Xzknii9h0UE-->
  <link rel="apple-touch-icon" sizes="180x180" href="/assets/favicon/apple-touch-icon.png" />
  <link rel="icon" type="image/png" sizes="32x32" href="/assets/favicon/favicon-32x32.png" />
  <link rel="icon" type="image/png" sizes="16x16" href="/assets/favicon/favicon-16x16.png" />
  <!--  <link rel="manifest" href="/site.webmanifest">-->
  <link rel="mask-icon" href="/assets/favicon/safari-pinned-tab.svg" color="#888888" />
  <meta name="apple-mobile-web-app-title" content="Journal" />
  <meta name="application-name" content="Journal" />
  <!--  <meta name="msapplication-TileColor" content="#da532c">-->
  <meta name="theme-color" content="#ffffff" />

  <title>sbt-buildinfo</title>
</head>
<body>
  <div class="navbar">
    <svg class="openbtn" id="sidebarIcon" onclick="openNav()" width="37px" height="28px">
      <title>Show sidebar</title>
      <use href="/assets/images/icons/Sidebar.svg#icon"/>
    </svg>
    <svg class="openbtn" id="icon" onclick="window.location.href='/'" width="34px" height="38px">
      <title>Open root</title>
      <use href="/assets/images/icons/Journal.svg#icon"/>
    </svg>
    <svg class="openbtn" id="github" onclick="openGitHub()" width="29px" height="28px">
      <title>Edit on GitHub</title>
      <use href="/assets/images/icons/GitHub.svg#icon"/>
    </svg>
  </div>
  <div id="mySidebar" class="sidebar">
  </div>
  <div class="content" id="main">
    <h1 id="sbt-buildinfo" class="title">
      <a href="#sbt-buildinfo">sbt-buildinfo</a>
    </h1>
    <p><a href="https://github.com/sbt/sbt-buildinfo">sbt-buildinfo</a> is a SBT plugin which dynamically generates a Scala object containing build parameters from the <code>build.sbt</code> file so you can use them in your code without statically defining them in multiple places. In other words, sbt-buildinfo allows your project to adhere to the don&#39;t-repeat-yourself (DRY) principle. An example use case would be if your application has an endpoint (if it&#39;s a service) or subcommand (if it&#39;s a CLI) that communicates the application&#39;s version. <a href="https://stackoverflow.com/a/48782896/6073927">This Stack Overflow answer</a> provides additional context.</p>
    <p>If you plan to write your code in IntelliJ IDEA, you <strong>must</strong> take care to inform the IDE about this dynamically-generated file; <a href="https://github.com/sbt/sbt-buildinfo/pull/75">this pull request</a> demonstrates how to do that. Basically, you need to add a build setting named <code>buildInfoUsePackageAsPath</code> and set it to <code>true</code>. For example:</p>
    <pre class="keep-together pdf epub"><code class="sbt">lazy val root = (project in file(&quot;.&quot;))
  .enablePlugins(BuildInfoPlugin, JavaAppPackaging)
  .settings(
    buildInfoKeys := Seq[BuildInfoKey](name, version),
    buildInfoPackage := rootPackage,
    buildInfoUsePackageAsPath := true
  )</code></pre>
  </div>
</body>
</html>
